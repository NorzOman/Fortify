package com.facebook.react.modules.fresco;

import kotlin.Metadata;
import kotlin.enums.EnumEntries;
import kotlin.enums.EnumEntriesKt;

/* JADX WARN: Failed to restore enum class, 'enum' modifier and super class removed */
/* JADX WARN: Unknown enum class pattern. Please report as an issue! */
/* compiled from: ImageCacheControl.kt */
@Metadata(d1 = {"\u0000\f\n\u0002\u0018\u0002\n\u0002\u0010\u0010\n\u0002\b\u0007\b\u0086\u0081\u0002\u0018\u00002\b\u0012\u0004\u0012\u00020\u00000\u0001B\t\b\u0002¢\u0006\u0004\b\u0002\u0010\u0003j\u0002\b\u0004j\u0002\b\u0005j\u0002\b\u0006j\u0002\b\u0007¨\u0006\b"}, d2 = {"Lcom/facebook/react/modules/fresco/ImageCacheControl;", "", "<init>", "(Ljava/lang/String;I)V", "DEFAULT", "RELOAD", "FORCE_CACHE", "ONLY_IF_CACHED", "ReactAndroid_release"}, k = 1, mv = {2, 0, 0}, xi = 48)
/* loaded from: classes.dex */
public final class ImageCacheControl {
    private static final /* synthetic */ EnumEntries $ENTRIES;
    private static final /* synthetic */ ImageCacheControl[] $VALUES;
    public static final ImageCacheControl DEFAULT = new ImageCacheControl("DEFAULT", 0);
    public static final ImageCacheControl RELOAD = new ImageCacheControl("RELOAD", 1);
    public static final ImageCacheControl FORCE_CACHE = new ImageCacheControl("FORCE_CACHE", 2);
    public static final ImageCacheControl ONLY_IF_CACHED = new ImageCacheControl("ONLY_IF_CACHED", 3);

    private static final /* synthetic */ ImageCacheControl[] $values() {
        return new ImageCacheControl[]{DEFAULT, RELOAD, FORCE_CACHE, ONLY_IF_CACHED};
    }

    public static EnumEntries<ImageCacheControl> getEntries() {
        return $ENTRIES;
    }

    private ImageCacheControl(String str, int i) {
    }

    static {
        ImageCacheControl[] imageCacheControlArr$values = $values();
        $VALUES = imageCacheControlArr$values;
        $ENTRIES = EnumEntriesKt.enumEntries(imageCacheControlArr$values);
    }

    public static ImageCacheControl valueOf(String str) {
        return (ImageCacheControl) Enum.valueOf(ImageCacheControl.class, str);
    }

    public static ImageCacheControl[] values() {
        return (ImageCacheControl[]) $VALUES.clone();
    }
}
